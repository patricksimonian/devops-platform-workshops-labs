apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: grafana-template
labels:
  template: grafana-template
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations:
            openshift.io/imported-from: 'grafana/grafana:6.2.0'
          from:
            kind: DockerImage
            name: 'grafana/grafana:6.2.0'
          generation: 2
          importPolicy: {}
          name: 6.2.0
          referencePolicy:
            type: Local
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
        openshift.io/image.dockerRepositoryCheck: 2019-10-16T20:50:28.000Z
      generation: 2
      labels:
        app: ${GRAFANA_SERVICE_NAME}
      name: ${GRAFANA_SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: 3000-tcp
          port: 3000
          protocol: TCP
          targetPort: 3000
      selector:
        app: ${GRAFANA_SERVICE_NAME}
        deploymentconfig: ${GRAFANA_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      labels:
        app: ${GRAFANA_SERVICE_NAME}
      name: ${GRAFANA_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${GRAFANA_SERVICE_NAME}
        deploymentconfig: ${GRAFANA_SERVICE_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            app: ${GRAFANA_SERVICE_NAME}
            deploymentconfig: ${GRAFANA_SERVICE_NAME}
        spec:
          containers:
            - image: " "
              imagePullPolicy: IfNotPresent
              name: ${GRAFANA_SERVICE_NAME}
              ports:
                - containerPort: 3000
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/grafana/provisioning/dashboards
                  name: volume-jzchq
                - mountPath: /etc/grafana/provisioning/datasources
                  name: volume-6jl8n
                - mountPath: /var/lib/grafana/dashboards
                  name: volume-mlvlw
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: ${GRAFANA_SERVICE_NAME}-dashboard-providers
              name: volume-jzchq
            - configMap:
                defaultMode: 420
                name: ${GRAFANA_SERVICE_NAME}-datasources
              name: volume-6jl8n
            - configMap:
                defaultMode: 420
                name: ${GRAFANA_SERVICE_NAME}-dashboards
              name: volume-mlvlw
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${GRAFANA_SERVICE_NAME}
            from:
              kind: ImageStreamTag
              name: '${GRAFANA_SERVICE_NAME}:6.2.0'
          type: ImageChange
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      generation: 9
      labels:
        app: ${GRAFANA_SERVICE_NAME}
      name: ${GRAFANA_SERVICE_NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    spec:
      host: ${ROUTE_HOST}.${ROUTE_DOMAIN}
      port:
        targetPort: 3000-tcp
      to:
        kind: Service
        name: ${GRAFANA_SERVICE_NAME}
        weight: 100
      wildcardPolicy: None
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: ${GRAFANA_SERVICE_NAME}
      name: ${GRAFANA_SERVICE_NAME}
  - apiVersion: v1
    data:
      dashboards.yaml: |-
        apiVersion: 1
        providers:
          # <string> provider name
        - name: 'default'
          # <int> org id. will default to orgId 1 if not specified
          orgId: 1
          # <string, required> name of the dashboard folder. Required
          folder: ''
          # <string> folder UID. will be automatically generated if not specified
          folderUid: ''
          # <string, required> provider type. Required
          type: file
          # <bool> disable dashboard deletion
          disableDeletion: false
          # <bool> enable dashboard editing
          editable: true
          # <int> how often Grafana will scan for changed dashboards
          updateIntervalSeconds: 10  
          options:
            # <string, required> path to dashboard files on disk. Required
            path: /var/lib/grafana/dashboards
    kind: ConfigMap
    metadata:
      labels:
        app: ${GRAFANA_SERVICE_NAME}
      name: ${GRAFANA_SERVICE_NAME}-dashboard-providers
  - apiVersion: v1
    data:
      simple_dashboard.json: |-
        {
          "annotations": {
            "list": [
              {
                "builtIn": 1,
                "datasource": "-- Grafana --",
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "type": "dashboard"
              }
            ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "id": 1,
          "links": [],
          "panels": [
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "Prometheus",
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 9,
                "w": 12,
                "x": 0,
                "y": 0
              },
              "id": 2,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "options": {},
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "sum(up)",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "timeFrom": null,
              "timeShift": null,
              "title": "Panel Title",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            }
          ],
          "schemaVersion": 18,
          "style": "dark",
          "tags": [],
          "templating": {
            "list": []
          },
          "time": {
            "from": "now-6h",
            "to": "now"
          },
          "timepicker": {
            "refresh_intervals": [
              "5s",
              "10s",
              "30s",
              "1m",
              "5m",
              "15m",
              "30m",
              "1h",
              "2h",
              "1d"
            ],
            "time_options": [
              "5m",
              "15m",
              "1h",
              "6h",
              "12h",
              "24h",
              "2d",
              "7d",
              "30d"
            ]
          },
          "timezone": "",
          "title": "Prometheus",
          "uid": "UlGDjtoWk",
          "version": 1
        }
    kind: ConfigMap
    metadata:
      labels:
        app: ${GRAFANA_SERVICE_NAME}
      name: ${GRAFANA_SERVICE_NAME}-dashboards
  - apiVersion: v1
    data:
      datasources.yml: |2-
          # config file version
          apiVersion: 1
          datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            orgId: 1
            url: http://${PROMETHEUS_SERVICE_NAME}:80
            isDefault: true
            version: 1
            editable: true
          - name: Loki
            type: loki
            orgId: 1
            access: proxy
            url: http://${LOKI_SERVICE_NAME}:3100
            jsonData:
                maxLines: 1000
    kind: ConfigMap
    metadata:
      labels:
        app: ${GRAFANA_SERVICE_NAME}
      name: ${GRAFANA_SERVICE_NAME}-datasources
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The name of the OpenShift Service exposed for the database.
  displayName: Grafana Service Name
  name: GRAFANA_SERVICE_NAME
  required: true
  value: grafana
- description: The name of the Loki service to connect to.
  displayName: Loki Service Name
  name: LOKI_SERVICE_NAME
  required: true
  value: loki
- description: The name of the Prometheus service to connect to.
  displayName: Prometheus Service Name
  name: PROMETHEUS_SERVICE_NAME
  required: true
  value: prometheus
- name: ROUTE_HOST
  value: cvarjao-grafana-4zq6uj-cvarjao-ocp201-tst-tools
- description: Default route subdomain
  displayName: Route subdomain
  name: ROUTE_DOMAIN
  required: true
  value: pathfinder.gov.bc.ca